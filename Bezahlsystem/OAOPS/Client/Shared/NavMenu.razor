@using System.Security.Claims;
@using OAOPS.Client.Services;

@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
@*    <MudNavLink Href="counter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Counter</MudNavLink>
    <MudNavLink Href="fetchdata" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Fetch data</MudNavLink>*@
    <MudNavLink Icon="@Icons.Material.Filled.ShoppingCart" Href="Products" Match="NavLinkMatch.Prefix">Produkte</MudNavLink>
    <AuthorizeView>
        <Authorized>
            
            @if (isAdmin)
            {
                <MudNavGroup Icon="@Icons.Material.Filled.AdminPanelSettings" Title="Admin Bereich">
                    <MudNavLink Href="manage/users">Benutzerverwaltung</MudNavLink>
                    <MudNavLink Href="manage/articles">Artikelverwaltung</MudNavLink>
                    <MudNavLink Href="manage/vendingMachines">Automatenverwaltung</MudNavLink>
                    <MudNavLink Href="manage/category">Kategorien</MudNavLink>
                    <MudDivider />
                    <MudNavGroup Icon="@Icons.Material.Filled.Settings" Title="Bamsti's Bereich">
                        <MudNavLink Href="errorCodes">ErrorCodes</MudNavLink>
                        <MudNavLink Href="logs">Logs</MudNavLink>
                        <MudNavLink Href="manage/suggestions">Suggestions</MudNavLink>
                    </MudNavGroup>
                </MudNavGroup>
            }

            <MudDivider />
            <MudNavLink Icon="@Icons.Material.Filled.Lightbulb" IconColor="Color.Primary" Href="suggestions">Vorschläge</MudNavLink>
            <MudNavLink Icon="@Icons.Material.Filled.Person" IconColor="Color.Primary" Color="Color.Inherit" Href="authentication/profile">@user?.Identity?.Name's Account</MudNavLink>
            <MudNavLink Icon="@Icons.Material.Filled.AccountBalance" IconColor="Color.Primary" Href="user/Profile">Kontostand: @balance</MudNavLink>
            <MudNavLink Icon="@Icons.Material.Filled.Logout" IconColor="Color.Primary" Color="Color.Inherit" OnClick="BeginSignOut">Logout</MudNavLink>

        </Authorized>
        <NotAuthorized>
            <MudDivider />
            <MudNavLink Icon="@Icons.Material.Filled.PersonAdd" Color="Color.Primary" Href="authentication/register">Register</MudNavLink>
            <MudNavLink Icon="@Icons.Material.Filled.Login" Color="Color.Primary" Href="authentication/login">Login</MudNavLink>

        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>

@code{
    ClaimsPrincipal user;
    bool isAdmin;
    bool isAuthenticated;
    string balance;

    [Inject]
    public IDataService DataService { get; set; }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        await InvokeAsync(StateHasChanged);
        isAdmin = user.IsInRole("Admin");

        var userName = user.Identity?.Name;

        if (userName == null)
        {
            balance = 0.ToString("C2");
            return;
        }

        var retBal = await DataService.GetBalance(userName);
        balance = retBal.ToString("C2");
    }
}