@using OAOPS.Client.Components.Shared;
@inject IDialogService DialogService

@if (Cart.Count > 0)
{
    <MudBadge Style="position: fixed; bottom: 50px; right: 50px;" Content="Cart.Sum(x => x.Amount)" Overlap="true">
        <MudFab OnClick="Checkout" Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.ShoppingCart" />
    </MudBadge>
}

@code{
    [Parameter]
    public List<ArticleDto> Cart { get; set; } = new List<ArticleDto>();
    
    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    private async void Checkout()
    {
        var parameters = new DialogParameters { ["Cart"] = Cart };

        var dialog = await DialogService.ShowAsync(typeof(CheckoutProcessComponent), "Checkout", parameters);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            // TODO: Keine ahnung bro
            var cart = result.Data as List<ArticleDto>;
            Cart = cart ?? new List<ArticleDto>();
        }

        await InvokeAsync(StateHasChanged);
    }
}
